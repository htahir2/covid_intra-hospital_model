# ============================================================================ #
# Agent-based modelling for nosocomial transmission of COVID-19
# ----------------------------------------------------------------------------
# Positivity rates for contact tracing over time
# Figure 8 in the main manuscript
# ============================================================================ #
rm(list=ls())

# Load paths, packages, and functions
source("abm_path_packages.R")
source("abm_functions.R")

# File with positivity rates per simulation for contact tracing
dates <- seq(as.Date("30-12-2019", format="%d-%m-%Y"),as.Date("24-08-2020", format="%d-%m-%Y"),by=1)
data_list <- read_excel_allsheets(paste0("../",dataPath, "positivity_rates_contact_tracing_over_time_all_sim_appended.xlsx"))
for(i in 1:length(data_list)){
  colnames(data_list[[i]]) <- c("n_contacts_traced","n_pos_contacts","contact_tracing_time",
                                "n_sympt_patients_traced", "hcw_time_of_infection","hcw_current_ward",
                                "n_sympt_hcws_traced","day","sim","prevalence","n_total","n_pos","pos_rate")
  data_list[[i]] <- cbind(date = dates[unlist(data_list[[i]]["day"])-1], data_list[[i]])
  data_list[[i]]$prev <-  data_list[[i]]$n_pos/data_list[[i]]$n_total
}

data <- plot_conf <- list()
n_ma <- 7
for(i in 1:length(data_list)){
  data[[i]] <- data_list[[i]] %>% group_by(date) %>% summarize(n_contacts_traced = sum(n_contacts_traced)-sum(n_sympt_patients_traced)-sum(n_sympt_hcws_traced), 
                                                               p_rate=ifelse(sum(n_pos_contacts)>0, 100*sum(n_pos_contacts)/sum(n_contacts_traced), NA),
                                                               n_contacts = sum(n_contacts_traced),
                                                               n_pos_contacts = sum(n_pos_contacts),
                                                               n_index = sum(n_pos),
                                                               mean=mean(pos_rate),median=median(pos_rate), 
                                                               ci_lower = quantile(pos_rate, 0.025), 
                                                               ci_upper = quantile(pos_rate, 0.975))
  data[[i]] <- cbind(data[[i]], ma=ma(data[[i]]$mean, n=n_ma), ma_ci_lower = ma(data[[i]]$ci_lower, n=n_ma), ma_ci_upper = ma(data[[i]]$ci_upper, n=n_ma))
  data[[i]] <- cbind(data[[i]], scenario=scenarios[6+i])
  pos_rate <- conf_lower <- conf_upper <- NULL
  for(j in 1:nrow(data[[i]])){
    temp <- binom.bayes(x=data[[i]]$n_pos_contacts[j],n=data[[i]]$n_contacts_traced[j])
    pos_rate <- c(pos_rate, temp["mean"]*100)
    conf_lower <- c(conf_lower, temp["lower"]*100)
    conf_upper <- c(conf_upper, temp["upper"]*100)
  }
  data[[i]] <- cbind(data[[i]], pos_rate=ma(unlist(pos_rate), n=n_ma),
                     conf_lower=ma(unlist(conf_lower),n=n_ma),
                     conf_upper=ma(unlist(conf_upper), n=n_ma))
  plot_conf[[i]] <- ggplot(data[[i]], aes(x=date)) + 
    geom_point(aes(y=pos_rate, colour="Positivity rate")) + 
    geom_line(aes(y=pos_rate, colour="Positivity rate"), size=1.3) + 
    geom_ribbon(aes(ymin=conf_lower, ymax=conf_upper, fill="(95% confidence interval)"), alpha=0.5) + 
    scale_colour_manual(values=c("Positivity rate"=colors_PR[3+i])) +
    scale_fill_manual(values=c("(95% confidence interval)"=colors_PR[3+i])) +
    theme_publication() + 
    theme(legend.position="none",
          panel.background = element_blank(),
          axis.title=element_blank()) 
}

conf_y_max <- max(data[[1]]$conf_upper, data[[2]]$conf_upper, data[[3]]$conf_upper, na.rm = T)
plots_conf <- plot_grid(plot_conf[[1]] + scale_y_continuous(limits=c(0,conf_y_max)), 
                        plot_conf[[2]] + scale_y_continuous(limits=c(0,conf_y_max)),
                        plot_conf[[3]] + scale_y_continuous(limits=c(0,conf_y_max)), 
                        nrow=3, labels = "AUTO",
                        hjust=2.6,label_size=20)
plots_conf <- annotate_figure(plots_conf, 
                              left = text_grob("Positivity rate (%)", size=20, rot=90))
plots_conf <- annotate_figure(plots_conf, 
                              left = text_grob("", size=20, rot=90))
ggsave(plots_conf, file=paste0(figuresPath, "pos_rate_contact_tracing_over_time_bayes_binom.pdf"), width=12, height=9)